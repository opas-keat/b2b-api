version: "3.9"

volumes:
  pg_data:
#  minio_data:

networks:
  default:

services:
# ---------------------------------- DB ----------------------------------
  db:
    image: postgres:15.1
    restart: always
    environment:
      TZ: Asia/Bangkok
      POSTGRES_MULTIPLE_DATABASES: $LOG_DB_NAME
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./create-multiple-postgresql-databases.sh:/docker-entrypoint-initdb.d/create-multiple-postgresql-databases.sh
    ports:
      - "5432:5432"
    networks:
      - default
  
  db_init_delay:
    image: alpine:3
    command: sleep 5
    depends_on:
      db:
        condition: service_started

# ---------------------------------- Migration ----------------------------------
  member_db_init:
    image: migrate/migrate:4
    volumes:
    - $PWD/migrations/member/sql:/migrations
    networks:
    - default
    command: -path=/migrations -database "postgres://db:5432/$MEMBER_DB_NAME?sslmode=disable&user=$DB_USER&password=$DB_PASSWORD" up
    depends_on:
      db_init_delay:
        condition: service_completed_successfully

  product_db_init:
    image: migrate/migrate:4
    volumes:
      - $PWD/migrations/product/sql:/migrations
    networks:
      - default
    command: -path=/migrations -database "postgres://db:5432/$PRODUCT_DB_NAME?sslmode=disable&user=$DB_USER&password=$DB_PASSWORD" up
    depends_on:
      db_init_delay:
        condition: service_completed_successfully

  purchase_db_init:
    image: migrate/migrate:4
    volumes:
      - $PWD/migrations/purchase/sql:/migrations
    networks:
      - default
    command: -path=/migrations -database "postgres://db:5432/$PURCHASE_DB_NAME?sslmode=disable&user=$DB_USER&password=$DB_PASSWORD" up
    depends_on:
      db_init_delay:
        condition: service_completed_successfully

  logs_db_init:
    image: migrate/migrate:4
    volumes:
      - $PWD/migrations/logs/sql:/migrations
    networks:
      - default
    command: -path=/migrations -database "postgres://db:5432/$LOG_DB_NAME?sslmode=disable&user=$DB_USER&password=$DB_PASSWORD" up
    depends_on:
      db_init_delay:
        condition: service_completed_successfully

# ---------------------------------- Services ----------------------------------
  # logs:
  #   image: cosmtrek/air
  #   working_dir: /services/logs
  #   volumes:
  #     - ./services/logs/:/services/logs
  #     - ./pkg/:/pkg
  #   networks:
  #     - default
  #   ports:
  #     - "8084:8084"
  #   depends_on:
  #     db_init_delay:
  #       condition: service_completed_successfully
  #   environment:
  #     PORT: 8084
  #     MODE: local
  #     DB_HOST: db
  #     DB_USER: postgres
  #     DB_NAME: logs
  #     DB_PASSWORD: P@ssw0rdppswb2b
  #     DB_PORT: 5432
  system-link:
    image: cosmtrek/air
    working_dir: /services/system_link
    volumes:
      - ./services/system_link/:/services/system_link
      - ./pkg/:/pkg
    networks:
      - default
    ports:
      - "8081:8081"
    environment:
      PORT: 8081
      MODE: local
      DB_HOST: 1.179.175.97
      DB_USER: appdev
      DB_NAME: DBWebApp
      DB_PASSWORD: dev@1234
      DB_PORT: 1433
# ---------------------------------- Minio ----------------------------------
#  minio:
#    image: minio/minio
#    ports:
#      - "9000:9000"
#    environment:
#      MINIO_ACCESS_KEY: ppswb2b
#      MINIO_SECRET_KEY: P@ssw0rd
#    volumes:
#      - minio_data:/data
#
#  minio-viewer:
#    image: minio/mc:edge
#    ports:
#      - "9001:9001"
#    environment:
#      MINIO_HOST: minio:9000
#      MINIO_ACCESS_KEY: ppswb2b
#      MINIO_SECRET_KEY: P@ssw0rd
#      MINIO_BROWSER: on
#    volumes:
#      - data:/data
#      - ./config:/root/.mc
#      - /etc/localtime:/etc/localtime:ro
#    depends_on:
#      - minio

