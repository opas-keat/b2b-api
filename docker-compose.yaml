version: "3.9"

services:
# ---------------------------------- Gateway -----------------------------
#  gateway:
#    image: traefik:v2.9.6
#    restart: always
#    command:
#      # - "--log.level=DEBUG"
#      - "--log.level=DEBUG"
#      - "--api=true"
#      - "--api.dashboard=true"
#      - "--api.insecure=true"
#      - "--providers.docker"
#      - "--entrypoints.web.address=:80"
#      - "--entrypoints.websecure.address=:443"
#    labels:
#      - "traefik.http.middlewares.my-compress.compress=true"
#    volumes:
#      - type: bind
#        source: /var/run/docker.sock
#        target: /var/run/docker.sock
#        read_only: true
#    ports:
#      - target: 80
#        published: 80
#        protocol: tcp
#        mode: host
##      - target: 8080
##        published: 8080
##        protocol: tcp
##        mode: host
#    networks:
#      - default
# ---------------------------------- DB ----------------------------------
  db:
      image: postgres:15.1
      restart: always
      environment:
        TZ: Asia/Bangkok
        POSTGRES_MULTIPLE_DATABASES: $MEMBER_DB_NAME,$PRODUCT_DB_NAME,$PURCHASE_DB_NAME,$LOG_DB_NAME
        POSTGRES_USER: ${DB_USER}
        POSTGRES_PASSWORD: ${DB_PASSWORD}
      volumes:
      - pg_data:/var/lib/postgresql/data
      - ./create-multiple-postgresql-databases.sh:/docker-entrypoint-initdb.d/create-multiple-postgresql-databases.sh
      ports:
      - "5433:5432"
      networks:
      - default
  
  db_init_delay:
    image: alpine:3
    command: sleep 5
    depends_on:
      db:
        condition: service_started

# ---------------------------------- Migration ----------------------------------
  member_db_init:
    image: migrate/migrate:4
    volumes:
    - $PWD/migrations/member/sql:/migrations
    networks:
    - default
    command: -path=/migrations -database "postgres://db:5432/$MEMBER_DB_NAME?sslmode=disable&user=$DB_USER&password=$DB_PASSWORD" up
    depends_on:
      db_init_delay:
        condition: service_completed_successfully

  product_db_init:
    image: migrate/migrate:4
    volumes:
      - $PWD/migrations/product/sql:/migrations
    networks:
      - default
    command: -path=/migrations -database "postgres://db:5432/$PRODUCT_DB_NAME?sslmode=disable&user=$DB_USER&password=$DB_PASSWORD" up
    depends_on:
      db_init_delay:
        condition: service_completed_successfully

  purchase_db_init:
    image: migrate/migrate:4
    volumes:
      - $PWD/migrations/purchase/sql:/migrations
    networks:
      - default
    command: -path=/migrations -database "postgres://db:5432/$PURCHASE_DB_NAME?sslmode=disable&user=$DB_USER&password=$DB_PASSWORD" up
    depends_on:
      db_init_delay:
        condition: service_completed_successfully

  logs_db_init:
    image: migrate/migrate:4
    volumes:
      - $PWD/migrations/logs/sql:/migrations
    networks:
      - default
    command: -path=/migrations -database "postgres://db:5432/$LOG_DB_NAME?sslmode=disable&user=$DB_USER&password=$DB_PASSWORD" up
    depends_on:
      db_init_delay:
        condition: service_completed_successfully

# ---------------------------------- Services ----------------------------------
#  system-link:
#    image: cosmtrek/air
#    working_dir: /services/system_link
#    volumes:
#      - ./services/system_link/:/services/system_link
#      - ./pkg/:/pkg
#    networks:
#      - default
#    ports:
#      - "8081:8081"
#    environment:
#      PORT: 8081
#      MODE: local
#      DB_HOST: 1.179.175.97
#      DB_USER: appdev
#      DB_NAME: DBWebApp
#      DB_PASSWORD: dev@1234
#      DB_PORT: 1433
# ---------------------------------- Minio ----------------------------------
#  minio:
#    image: minio/minio
#    ports:
#      - "9000:9000"
#    environment:
#      MINIO_ACCESS_KEY: ppswb2b
#      MINIO_SECRET_KEY: P@ssw0rd
#    volumes:
#      - minio_data:/data
#
#  minio-viewer:
#    image: minio/mc:edge
#    ports:
#      - "9001:9001"
#    environment:
#      MINIO_HOST: minio:9000
#      MINIO_ACCESS_KEY: ppswb2b
#      MINIO_SECRET_KEY: P@ssw0rd
#      MINIO_BROWSER: on
#    volumes:
#      - data:/data
#      - ./config:/root/.mc
#      - /etc/localtime:/etc/localtime:ro
#    depends_on:
#      - minio

volumes:
  pg_data:
#  minio_data:

networks:
  default: